# PROD DOCKER

version: "2"

services:
  backend:
    container_name: backend
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: ./docker/backend/Dockerfile
    env_file:
      - .env.prod
    command:
      - ./docker/backend/run.sh
    volumes:
      - ./backend/media:/backend/media:consistent
      - ./backend/static:/backend/static:consistent
    depends_on:
      - database
  database:
    container_name: database
    restart: unless-stopped
    image: postgres:15
    volumes:
      - ~/.pg/pg_data/devrel_hack:/var/lib/postgresql/data
    env_file:
      - .env.prod
    ports:
      - "5432:5432"
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    env_file:
      - .env.prod
    ports:
      - "1000:8080"
    depends_on:
      - database
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    volumes:
      - ./frontend/dist:/frontend/dist:consistent
    depends_on:
      - backend
    ports:
      - "5173:5173"
    restart: no
    env_file:
      - .env.prod
  nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      context: ./docker/nginx/
      dockerfile: ./Dockerfile
    volumes:
      - ./backend/static:/backend/static:consistent
      - ./backend/media:/backend/media:consistent
      - ./frontend/dist:/frontend/dist:consistent
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      # - ./certbot/www:/var/www/certbot
      # - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - backend
      - frontend
      # - certbot
    env_file:
      - .env.prod
    ports:
      - "${NGINX_EXTERNAL_PORT:-80}:80"
      - "${NGINX_EXTERNAL_SSL_PORT:-443}:443"
  broker:
    container_name: broker
    image: redis:alpine3.16
    restart: always
    env_file:
      - .env.prod
    ports:
      - "6379:6379"
    volumes:
      - ./backend/redis/data:/root/redis
      - ./backend/redis/redis.conf:/usr/local/etc/redis/redis.conf
  worker:
    container_name: worker
    restart: always
    build:
      context: ./backend
      dockerfile: ./docker/backend/Dockerfile
    command: celery -A mailer worker -l info
    volumes:
      - ./backend:/backend
    env_file:
      - .env.prod
    depends_on:
      - database
      - broker
      - backend
